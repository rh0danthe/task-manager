// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  name     String
  email    String @unique
  password String

  columns          Column[]   @relation
  createdTaskCards TaskCard[] @relation(name: "user_created_tasks")
  takenTaskCards   TaskCard[] @relation(name: "user_taken_tasks")
  comments         Comment[]  @relation

  @@map("users")
}

model Column {
  id Int @id @default(autoincrement())

  title String

  creator   User @relation(fields: [creatorId], references: [id])
  creatorId Int  @map("creator_id")

  taskCards TaskCard[] @relation

  @@map("columns")
}

model TaskCard {
  id Int @id @default(autoincrement())

  title   String
  content String

  creator   User @relation(fields: [creatorId], references: [id], name: "user_created_tasks")
  creatorId Int  @map("creator_id")

  users User[] @relation(name: "user_taken_tasks")

  column   Column @relation(fields: [columnId], references: [id])
  columnId Int    @map("column_id")

  comments Comment[] @relation

  @@map("task_cards")
}

model Comment {
  id Int @id @default(autoincrement())

  content String

  creator   User @relation(fields: [creatorId], references: [id])
  creatorId Int  @map("creator_id")

  taskCard   TaskCard @relation(fields: [taskcardId], references: [id])
  taskcardId Int      @map("task_card_id")

  @@map("comments")
}
